repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.4.1
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML]
        args: [--ignore-missing-imports]
        exclude: ^(fix_lint_issues\.py|dev-setup\.py|setup_test_environments\.py|verify_setup\.py|test_generator\.py)$

  # SQLFluff linting for SQL files (using local development package)
  # NOTE: Requires 'pip install -e .' to be run first to install the development package
  # Only runs on examples/ directory which has proper .sqlfluff configuration
  - repo: local
    hooks:
      - id: sqlfluff-lint-examples
        name: SQLFluff Lint Examples
        entry: python
        language: system
        files: ^examples/.*\.sql$
        args: [-c, "import os; os.chdir('examples'); os.system('sqlfluff lint migrations/ --dialect snowflake')"]
        require_serial: false
        pass_filenames: false
      - id: sqlfluff-fix-examples
        name: SQLFluff Fix Examples
        entry: python
        language: system
        files: ^examples/.*\.sql$
        args: [-c, "import os; os.chdir('examples'); os.system('sqlfluff fix migrations/ --dialect snowflake')"]
        require_serial: false
        pass_filenames: false

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
        exclude: bandit-report\.json$
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: requirements-txt-fixer

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [--recursive, --format, json, --output, bandit-report.json, --configfile, .bandit]
        files: \.py$
        exclude: ^(test_.*\.py|tests/.*\.py|dev-setup\.py|fix_lint_issues\.py|setup_test_environments\.py|verify_setup\.py|test_generator\.py)$

  # Documentation linting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: ^(fix_lint_issues\.py|dev-setup\.py|setup_test_environments\.py|verify_setup\.py|test_generator\.py)$

# Configuration for specific hooks
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
